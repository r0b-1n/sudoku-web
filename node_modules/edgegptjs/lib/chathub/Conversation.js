"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Conversation = void 0;
const axios_1 = __importDefault(require("axios"));
const tough_cookie_1 = require("tough-cookie");
const axios_cookiejar_support_1 = require("axios-cookiejar-support");
const fs = __importStar(require("fs"));
const constants_1 = require("../constants");
const utils_1 = require("../utils");
class Conversation {
    constructor(cookiePath = '', cookies = null, proxy = null) {
        this.struct = {
            conversationId: '',
            clientId: '',
            conversationSignature: '',
            result: { value: 'Success', message: null },
        };
        const clientOptions = {
            proxy: proxy ? (0, utils_1.parseProxyString)(proxy) : undefined,
            timeout: 30000,
            headers: constants_1.HEADERS_INIT_CONVER,
        };
        this.session = (0, axios_cookiejar_support_1.wrapper)(axios_1.default.create(clientOptions));
        let cookieFile;
        if (cookies !== null) {
            cookieFile = cookies;
        }
        else {
            const f = cookiePath
                ? fs.readFileSync(cookiePath, 'utf8')
                : fs.readFileSync(process.env.COOKIE_FILE, 'utf-8');
            cookieFile = JSON.parse(f);
        }
        const cookieJar = new tough_cookie_1.CookieJar();
        for (const { name, value } of cookieFile) {
            // console.log(
            //   chalk.bold(
            //     chalk.blue(`Setting cookie are: ${name}, value: {${value}}`),
            //   ),
            // );
            cookieJar.setCookieSync(new tough_cookie_1.Cookie({ key: name, value }), 'https://bing.com');
        }
        this.session.defaults.jar = cookieJar;
        this.session.interceptors.request.use((config) => {
            config.withCredentials = true;
            config.headers.Cookie = cookieJar.getCookieStringSync('https://bing.com');
            // console.log(
            //   chalk.bold(
            //     chalk.red(
            //       `the current cookies are: ${cookieJar.getCookieStringSync(
            //         'https://bing.com',
            //       )}`,
            //     ),
            //   ),
            // );
            return config;
        });
        this.session.defaults.withCredentials = true;
    }
    initialize() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            // Send GET request
            let response = yield this.session.get(process.env.BING_PROXY_URL ||
                'https://edgeservices.bing.com/edgesvc/turing/conversation/create');
            if (response.status !== 200) {
                response = yield this.session.get('https://edge.churchless.tech/edgesvc/turing/conversation/create');
            }
            if (response.status !== 200) {
                console.error(`Status code: ${response.status}`);
                console.error(response.data);
                console.error(response.config.url);
                throw new Error('Authentication failed');
            }
            try {
                this.struct = response.data;
            }
            catch (err) {
                throw new Error('Authentication failed. You have not been accepted into the beta.');
            }
            if (this.struct.result.value === 'UnauthorizedRequest') {
                throw new Error(`UnauthorizedRequestError message: [${this.struct.result.message || 'UnauthorizedRequest without message'},
        the used cookie: [${(_a = this.session.defaults.jar) === null || _a === void 0 ? void 0 : _a.getCookieStringSync('*')}]`);
            }
        });
    }
}
exports.Conversation = Conversation;
