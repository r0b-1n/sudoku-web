"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatHubRequest = exports.DEFAULT_UPDATE_OPTION = void 0;
const utils_1 = require("../utils");
exports.DEFAULT_UPDATE_OPTION = [
    'deepleo',
    'enable_debug_commands',
    'disable_emoji_spoken_text',
    'enablemm',
];
/**
 * Request object for ChatHub
 */
class ChatHubRequest {
    constructor(conversation_signature, client_id, conversation_id, invocation_id = 0) {
        this.conversation_signature = conversation_signature;
        this.client_id = client_id;
        this.conversation_id = conversation_id;
        this.invocation_id = invocation_id;
        this.struct = {};
    }
    /**
     * Updates request object
     * @param prompt
     * @param conversation_style
     * @param options
     */
    update(prompt, conversation_style = null, options = null) {
        if (options === null) {
            options = exports.DEFAULT_UPDATE_OPTION;
        }
        if (conversation_style) {
            options = [
                'nlu_direct_response_filter',
                'deepleo',
                'disable_emoji_spoken_text',
                'responsible_ai_policy_235',
                'enablemm',
                conversation_style,
                'dtappid',
                'cricinfo',
                'cricinfov2',
                'dv3sugg',
            ];
        }
        this.struct = {
            arguments: [
                {
                    source: 'cib',
                    optionsSets: options,
                    sliceIds: ['222dtappid', '225cricinfo', '224locals0'],
                    traceId: (0, utils_1.getRanHex)(32),
                    isStartOfSession: this.invocation_id == 0,
                    message: {
                        author: 'user',
                        inputMethod: 'Keyboard',
                        text: prompt,
                        messageType: 'Chat',
                    },
                    conversationSignature: this.conversation_signature,
                    participant: {
                        id: this.client_id,
                    },
                    conversationId: this.conversation_id,
                },
            ],
            invocationId: String(this.invocation_id),
            target: 'chat',
            type: 4,
        };
        this.invocation_id += 1;
    }
}
exports.ChatHubRequest = ChatHubRequest;
